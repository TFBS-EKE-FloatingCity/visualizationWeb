@model UI.ViewModel.SimulationStart

@{
    ViewBag.Title = "Simulation";
}

@using (Html.BeginForm("StartSimulation", "Dashboard"))
{
<div class="form-horizontal">
    <div class="form-group">
        @Html.LabelFor(model => model.Duration, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Duration, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Duration, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.SimScenarioID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("SimScenarioID", Model.ScenarioSelectList, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.SimScenarioID, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Start" class="btn btn-default" />
            @*Button to close the Modal*@
            <input type="button" value="Close" style="float: right; clear:both" class="btn btn-default" data-dismiss="modal" />
        </div>
    </div>
</div>
}