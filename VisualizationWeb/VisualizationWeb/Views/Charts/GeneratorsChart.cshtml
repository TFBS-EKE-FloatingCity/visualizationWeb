<h4>Generator efficiency (in W)</h4>
<canvas id="GeneratorsChart" height="200"></canvas>

<script>
    // chart config
    var generatorConfig = {
        type: 'bar',
        data: {
            labels: [
                "Generator 1", "Generator 2", "Generator 3"
            ],
            datasets: [{
                label: "Generatoren",
                data: [],
                backgroundColor: ["rgba(219, 0, 40, 1)", 'rgba(4, 0, 219, 1)', 'rgba(61, 117, 0, 1)'],
                borderWidth: 2
            }]
        },
        options: {
            responsive: true,
            legend: {
                display: false
            },
            scales: {
                yAxes: [{
                    ticks: {
                        min: 0
                        //max
                    }

                }]
            }
        }
    };

    $(document).ready(function () {
        // chart
        var ctx = document.getElementById('GeneratorsChart').getContext('2d');
        window.generatorChart = new Chart(ctx, generatorConfig);

        getGeneratorData()

        setInterval(function () {
            getGeneratorData()
        }, 2000)
    })
    //API Call with AJAX
    function getGeneratorData() {
        $.ajax({
            url: '/API/Dashboard/GetCurrentGeneratorsData',
            dataType: 'json',
            type: 'GET',
            contentType: 'application/json',
            processData: false,
            success: function (data, textStatus, jQxhr) {
                var chartData = []
                data = JSON.parse(data)
                data.forEach(function (value) {
                    //Generator ID's: 10, 11, 12
                    switch (value.SensorID) {
                            case 10:
                                chartData[0] = value.SValue;
                                break;
                            case 11:
                                chartData[1] = value.SValue;
                                break;
                            case 12:
                                chartData[2] = value.SValue;
                                break;
                    }
                })
                setGeneratorData(chartData)
            },
            error: function (jqXhr, textStatus, errorThrown) {
                console.log(errorThrown);
            }
        });
    }
    //Update Chart
    function setGeneratorData(data) {
        generatorConfig.data.datasets.forEach(function (dataset) {
            dataset.data = data
        });
        window.generatorChart.update()
    }
</script>