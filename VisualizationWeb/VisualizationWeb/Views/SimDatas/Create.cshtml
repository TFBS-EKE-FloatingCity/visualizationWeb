@model VisualizationWeb.Models.SimData


<div class="app-headline app-headline--no-line">
    @Html.ActionLink(" ", "Details", "SimTypes", new { id = Model.SimTypeID }, new { @class = "glyphicon glyphicon-arrow-left back-to-list" })
    <h2>Create</h2>
</div>


@using (Html.BeginForm(new { ReturnTo = ViewData["ReturnTo"] }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Simulation Data</h4>
        @*@Html.HiddenFor(model => model.SimTypeID, new { id = ViewBag["SimTypeID"] });*@
        @*@Html.HiddenFor(model => model.SimTypeID);*@
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group" hidden="hidden">
            @Html.LabelFor(model => model.SimTypeID, "SimTypeID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10" hidden="hidden">
                @Html.EditorFor(model => model.SimTypeID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SimTypeID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SimTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SimTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SimTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Wind, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Wind, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Wind, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Sun, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Sun, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Sun, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Consumption, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Consumption, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Consumption, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
