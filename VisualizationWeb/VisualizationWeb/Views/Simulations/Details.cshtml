@model Simulation.Library.ViewModels.SimScenarioVM.SimScenarioDetailsViewModel

@{
    ViewBag.Title = "Details";
}

<h2>Scenario Overview</h2>

<div>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Title)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Title)
        </dd>

        <dt>
             @Html.DisplayNameFor(model => model.StartDate)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.StartDate)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.EndDate)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.EndDate)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Notes)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Notes)
        </dd>
    </dl>
</div>
<p>
    @Html.ActionLink("Back to List", "Index")
</p>

<br />

<div class="row">
    <div class="col-md-6">
        <table class="table">

            @if (Model.SimPositions?.Count() > 0)
            {
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.SimPositions.FirstOrDefault().SunValue)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.SimPositions.FirstOrDefault().WindValue)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.SimPositions.FirstOrDefault().EnergyConsumptionValue)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.SimPositions.FirstOrDefault().TimeRegistered)
                </th>
                <th></th>
            </tr>
                foreach (var cs in Model.SimPositions)
                {
                    <tr>
                        <td>
                            @Html.Label(cs.SunValue.ToString())
                        </td>
                        <td>
                            @Html.Label(cs.WindValue.ToString())
                        </td>
                        <td>
                            @Html.Label(cs.EnergyConsumptionValue.ToString())
                        </td>
                        <td>
                            @Html.Label(cs.TimeRegistered.ToShortTimeString())
                        </td>
                        <td>
                            @Html.ActionLink("Delete", "RemoveSimPosition", new { simPositionId = cs.SimPositionID, simScenarioId = Model.SimScenarioID })
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td>
                        <p class="text-info">
                            No Positions in Scenario!
                        </p>
                    </td>
                </tr>
            }
        </table>
        <button type="button" class="btn btn-info btn-lg" data-toggle="modal" data-target="#myModal">Add Position</button>

        <div id="myModal" class="modal fade" role="dialog">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title">Add Position</h4>
                    </div>
                    <div class="modal-body">
                        @Html.Partial("PartialViews/PartialPositionCreate", new Simulation.Library.ViewModels.SimPositionVM.SimPositionCreateAndEditViewModel { SimScenarioID = Model.SimScenarioID })
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    </div>
                </div>

            </div>
        </div>
    </div>
